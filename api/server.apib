FORMAT: 1A
HOST: http://localhost:3333

# Bookcase

Bookcase is an application for managing books.

## Authentication

Bookcase API uses Bearer Token Authentication. First is need to create a new user and request your token.

`Authorization: Bearer 5262d64b892e8d4341000001`

## Error States

The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

## Group Books

Resources related to books.

## Collection [/books/{id}]

### Index [GET]

List all books from auth user.

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "user_id": 1,
                "title": "O Silmarillion",
                "author": "J. R. R. Tolkien",
                "number_pages": 365,
                "description": "O Silmarillion, publicado quatro anos após o falecimento do seu autor, é um relato dos Dias Antigos, a Primeira Era do Mundo. Em O Senhor dos Anéis, foram narrados os grandes eventos do final da Terceira Era; as histórias de O Silmarillion, no entanto, são lendas derivadas de um passado muito mais remoto, quando Morgoth, o primeiro Senhor do Escuro, habtava a Terra-média, e os altos-elfos guerrearam com ele pela recuperação das Silmarils.\nMas O Silmarillion não relata apenas os eventos de uma época muito anterior àquela de O Senhor dos Anéis em todos os pontos essenciais de sua concepção, ele também é, de longe, a obra mais antiga. Na realidade, embora na época não chamasse O Silmarillion, já existia meio século antes. Em cadernos velhíssimos, que remontam a 1917, podem ser lidas as versões iniciais das histórias mais importantes da mitologia, muitas vezes escritas às pressas, à lápis.",
                "created_at": "2019-05-17 20:37:51",
                "updated_at": "2019-08-31 10:41:41",
                "cover": null,
                "tags": []
            },
            {
                "id": 2,
                "user_id": 1,
                "title": "O Hobbit",
                "author": "J. R. R. Tolkien",
                "number_pages": 310,
                "description": "Bilbo Bolseiro é um hobbit que leva uma vida confortável e sem ambições, raramente aventurando-se para além de sua despensa ou sua adega. Mas seu contentamento é perturbado quando Gandalf, o mago, e uma companhia de anões batem em sua porta e levam-no para uma expedição.",
                "created_at": "2019-05-17 21:37:11",
                "updated_at": "2019-08-31 11:39:44",
                "cover": {
                    "id": 1,
                    "book_id": 1,
                    "file": "1567387114691.jpeg",
                    "url": "http://127.0.0.1:3333/covers/1567387114691.jpeg",
                    "created_at": "2019-09-01 22:18:34",
                    "updated_at": "2019-09-01 22:18:34"
                },
                "tags": [
                    {
                        "id": 1,
                        "user_id": 1,
                        "name": "Fantasia",
                        "created_at": "2019-09-09 09:32:31",
                        "updated_at": "2019-09-09 09:32:31",
                        "pivot": {
                            "tag_id": 1,
                            "book_id": 1
                        }
                    }
                ]
            },
        ]

### Create [POST]

You may register your book.
Request containing the attributes below:

+ title (string, required) - The title
+ author (string) - The author
+ number_pages (string) - The number of pages
+ description (string) - The description
+ review (string) - The complete review about the book
+ rating (integer) - The rating about the book
+ status (enum) - The status ['READING', 'WANT_READ', 'READ', 'REREADING', 'ABANDONED']
+ tags (array) - ID's of the tags

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "title": "O Silmarillion",
            "author": "J. R. R. Tolkien",
            "number_pages": 365,
            "description": "O Silmarillion, publicado quatro anos após o falecimento do seu autor, é um relato dos Dias Antigos, a Primeira Era do Mundo. Em O Senhor dos Anéis, foram narrados os grandes eventos do final da Terceira Era; as histórias de O Silmarillion, no entanto, são lendas derivadas de um passado muito mais remoto, quando Morgoth, o primeiro Senhor do Escuro, habtava a Terra-média, e os altos-elfos guerrearam com ele pela recuperação das Silmarils.\nMas O Silmarillion não relata apenas os eventos de uma época muito anterior àquela de O Senhor dos Anéis em todos os pontos essenciais de sua concepção, ele também é, de longe, a obra mais antiga. Na realidade, embora na época não chamasse O Silmarillion, já existia meio século antes. Em cadernos velhíssimos, que remontam a 1917, podem ser lidas as versões iniciais das histórias mais importantes da mitologia, muitas vezes escritas às pressas, à lápis.",
            "created_at": "2019-05-17 20:37:51",
            "updated_at": "2019-08-31 10:41:41",
            "cover": null,
            "tags": []
        }

### Show [GET]

Show an especific Book.

+ Parameters

    + id: 1 (required, number) - The book ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "title": "O Silmarillion",
            "author": "J. R. R. Tolkien",
            "number_pages": 365,
            "description": "O Silmarillion, publicado quatro anos após o falecimento do seu autor, é um relato dos Dias Antigos, a Primeira Era do Mundo. Em O Senhor dos Anéis, foram narrados os grandes eventos do final da Terceira Era; as histórias de O Silmarillion, no entanto, são lendas derivadas de um passado muito mais remoto, quando Morgoth, o primeiro Senhor do Escuro, habtava a Terra-média, e os altos-elfos guerrearam com ele pela recuperação das Silmarils.\nMas O Silmarillion não relata apenas os eventos de uma época muito anterior àquela de O Senhor dos Anéis em todos os pontos essenciais de sua concepção, ele também é, de longe, a obra mais antiga. Na realidade, embora na época não chamasse O Silmarillion, já existia meio século antes. Em cadernos velhíssimos, que remontam a 1917, podem ser lidas as versões iniciais das histórias mais importantes da mitologia, muitas vezes escritas às pressas, à lápis.",
            "created_at": "2019-05-17 20:37:51",
            "updated_at": "2019-08-31 10:41:41",
            "cover": null,
            "tags": []
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

### Update [PUT]

Update an existing book.
Request may containing the attributes below:

+ title (string) - The title
+ author (string) - The author
+ number_pages (string) - The number of pages
+ description (string) - The description
+ review (string) - The complete review about the book
+ cover (file) - The file that represents the book cover
+ rating (integer) - The rating about the book
+ status (enum) - The status ['READING', 'WANT_READ', 'READ', 'REREADING', 'ABANDONED']
+ tags (array) - ID's of the tags

+ Parameters

    + id: 1 (required, number) - The book ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "title": "O Silmarillion",
            "author": "J. R. R. Tolkien",
            "number_pages": 365,
            "description": "O Silmarillion, publicado quatro anos após o falecimento do seu autor, é um relato dos Dias Antigos, a Primeira Era do Mundo. Em O Senhor dos Anéis, foram narrados os grandes eventos do final da Terceira Era; as histórias de O Silmarillion, no entanto, são lendas derivadas de um passado muito mais remoto, quando Morgoth, o primeiro Senhor do Escuro, habtava a Terra-média, e os altos-elfos guerrearam com ele pela recuperação das Silmarils.\nMas O Silmarillion não relata apenas os eventos de uma época muito anterior àquela de O Senhor dos Anéis em todos os pontos essenciais de sua concepção, ele também é, de longe, a obra mais antiga. Na realidade, embora na época não chamasse O Silmarillion, já existia meio século antes. Em cadernos velhíssimos, que remontam a 1917, podem ser lidas as versões iniciais das histórias mais importantes da mitologia, muitas vezes escritas às pressas, à lápis.",
            "created_at": "2019-05-17 20:37:51",
            "updated_at": "2019-08-31 10:41:41",
            "cover": null,
            "tags": []
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

### Delete [DELETE]

Delete an existing book.

+ Parameters

    + id: 1 (required, number) - The book ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            message: "Book deleted."
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

## Group Covers

Resources related to covers.

## Collection [/covers/{id}/{file}]

### Create [POST]

You may register a cover of a book.
Request containing the attributes below:

+ cover (file, required) - The file
+ book_id (string) - The book ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001
            Content-Type: multipart/form-data

+ Response 200 (application/json)

        {
            "id": 1,
            "book_id": "1",
            "file": "1567387485555.jpeg",
            "url": "http://127.0.0.1:3333/covers/1567387485555.jpeg",
            "created_at": "2019-09-01 22:24:45",
            "updated_at": "2019-09-01 22:24:45"
        }

### Show [GET]

Show an especific Cover.

+ Parameters

    + file: 1567387114691.jpeg (required, string) - The cover file name

+ Response 200 (image/jpeg)

+ Response 404 (application/json)

        {
            error: 'Cover file not found.'
        }

### Update [PUT]

Update an existing cover.
Request may containing the attributes below:

+ cover (file, required) - The file
+ book_id (string) - The book ID

+ Parameters

    + id: 1 (required, number) - The cover ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001
            Content-Type: multipart/form-data

+ Response 200 (application/json)

        {
            "id": 1,
            "book_id": "1",
            "file": "1567387485555.jpeg",
            "url": "http://127.0.0.1:3333/covers/1567387485555.jpeg",
            "created_at": "2019-09-01 22:24:45",
            "updated_at": "2019-09-04 14:04:12"
        }

## Group Session

Resources related to session/auth.

## Collection [/sessions]

### Create [POST]

You may register a session, creating an authenticate user.
Request containing the attributes below:

+ email (string, required) - The email of the user
+ password (string, required) - The password of the user

+ Response 200 (application/json)

        {
            "type": "bearer",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjEsImlhdCI6MTU2Nzg1NTUwNH0.rpAzU5RX2FEi45BcHipw_pTf6jTiKjNFJHsO6Y8SwC8",
            "refreshToken": null
        }

## Group Tags

Resources related to tags.

## Collection [/tags/{id}]

### Index [GET]

List all tags from auth user.

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "user_id": 1,
                "name": "Fantasia",
                "created_at": "2019-09-09 09:32:37",
                "updated_at": "2019-09-09 09:32:37"
            },
            {
                "id": 2,
                "user_id": 1,
                "name": "Aventura",
                "created_at": "2019-09-09 09:32:49",
                "updated_at": "2019-09-09 09:32:49"
            },
            {
                "id": 3,
                "user_id": 1,
                "name": "Ficção",
                "created_at": "2019-09-09 09:32:58",
                "updated_at": "2019-09-09 09:32:58"
            }
        ]

### Create [POST]

You may register your tags.
Request containing the attributes below:

+ name (string, required) - The name

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "name": "Fantasia",
            "created_at": "2019-09-09 09:32:37",
            "updated_at": "2019-09-09 09:32:37"
        }

### Show [GET]

Show an especific tag.

+ Parameters

    + id: 1 (required, number) - The tag ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "name": "Fantasia",
            "created_at": "2019-09-09 09:32:37",
            "updated_at": "2019-09-09 09:32:37"
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

### Update [PUT]

Update an existing tag.
Request may containing the attributes below:

+ name (string, required) - The name

+ Parameters

    + id: 1 (required, number) - The tag ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1,
            "user_id": 1,
            "name": "Fantasia",
            "created_at": "2019-09-09 09:32:37",
            "updated_at": "2019-09-09 09:32:37"
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

### Delete [DELETE]

Delete an existing tag.

+ Parameters

    + id: 1 (required, number) - The tag ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            message: "Tag deleted."
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }

## Group Users

Resources related to users.

## Collection [/users]

### Create [POST]

You may register a user.
Request containing the attributes below:

+ name (string, required) - The name of the user
+ email (string, required) - The email of the user
+ password (string, required) - The password of the user

+ Response 200 (application/json)

        {
            "id": 1
            "name": "Adriano Vasconcelos",
            "email": "pntadr@gmail.com",
            "created_at": "2019-09-08 10:52:25",
            "updated_at": "2019-09-08 10:52:25",
        }

### Update [PUT]

Update an existing user.
Request may containing the attributes below:

+ name (string, required) - The name of the user
+ email (string, required) - The email of the user
+ password (string, required) - The password of the user

+ Parameters

    + id: 1 (required, number) - The user ID

+ Request

    + Headers

            Authorization: Bearer 5262d64b892e8d4341000001

+ Response 200 (application/json)

        {
            "id": 1
            "name": "Adriano Vasconcelos",
            "email": "pntadr@gmail.com",
            "created_at": "2019-09-08 10:52:25",
            "updated_at": "2019-09-09 10:22:28",
        }

+ Response 401 (application/json)

        {
            error: "Not authorized."
        }